name: Build geosite.dat
on:
  workflow_dispatch:
  schedule:
    - cron: "30 0 */3 * *"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout Loyalsoldier/domain-list-custom
        uses: actions/checkout@v4
        with:
          repository: Loyalsoldier/domain-list-custom
          path: custom

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./custom/go.mod
          cache-dependency-path: ./custom/go.sum

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout runetfreedom/russia-domains-list
        uses: actions/checkout@v4
        with:
          repository: runetfreedom/russia-domains-list
          path: additional

      - name: Filter data directory based on sections
        run: |
          INTEREST_FILE=sections
          DATA_DIR=./community/data
          TEMP_KEEP_LIST=keep_files.txt
          PROCESSED_LIST=processed_files.txt

          [ ! -f $INTEREST_FILE ] && { echo "File $INTEREST_FILE not found."; exit 1; }

          > $TEMP_KEEP_LIST
          > $PROCESSED_LIST

          grep -v '^#' $INTEREST_FILE | grep -v '^\s*$' > $TEMP_KEEP_LIST

          while read -r section; do
            file=$DATA_DIR/$section
            if [ -f "$file" ] && ! grep -qx "$section" $PROCESSED_LIST; then
              echo "Processing: $section"
              echo "$section" >> $PROCESSED_LIST
              grep '^include:' "$file" | awk -F':' '{print $2}' >> $TEMP_KEEP_LIST
            fi
          done < $TEMP_KEEP_LIST

          sort -u $TEMP_KEEP_LIST -o $TEMP_KEEP_LIST

          find $DATA_DIR -type f | while read -r file; do
            base=$(basename "$file")
            ! grep -qx "$base" $TEMP_KEEP_LIST && rm -f "$file"
          done

          rm -f $TEMP_KEEP_LIST $PROCESSED_LIST



      - name: Set variables
        run: |
          echo "RELEASE_NAME=Geosite Release" >> $GITHUB_ENV
          echo "TAG_NAME=geosite-release" >> $GITHUB_ENV

          echo "ANTIFILTER_DOWNLOAD_COMMUNITY=https://community.antifilter.download/list/domains.lst" >> $GITHUB_ENV
          echo "REFILTER_ALL=https://raw.githubusercontent.com/1andrevich/Re-filter-lists/refs/heads/main/domains_all.lst" >> $GITHUB_ENV

          #echo "PETERLOWE_REJECT_URL=https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=1&mimetype=plaintext" >> $GITHUB_ENV
          #echo "ADGUARD_DNS_REJECT_URL=https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt" >> $GITHUB_ENV

          echo "WIN_UPDATE=https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/update.txt" >> $GITHUB_ENV
          echo "WIN_EXTRA=https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/extra.txt" >> $GITHUB_ENV
        shell: bash

      - name: Get and add domain lists
        run: |
          curl -sSL $ANTIFILTER_DOWNLOAD_COMMUNITY > ./antifilter-download-community.txt
          curl -sSL $REFILTER_ALL > ./refilter.txt
          curl -sSL $WIN_UPDATE | grep "0.0.0.0" | awk '{print $2}' > ./win-update.txt
          curl -sSL $WIN_EXTRA | grep "0.0.0.0" | awk '{print $2}' > ./win-extra.txt

          cp {antifilter-download-community,refilter,win-update,win-extra}.txt ./community/data/
          for f in ./community/data/*.txt; do mv "$f" "${f//.txt/}"; done

          rm -rf ./additional/README.md
          mv ./additional/* ./community/data/

      #- name: Build ad block
      #  run: |
      #    curl -sSL $ADGUARD_DNS_REJECT_URL | perl -ne '/^\|\|([-_0-9a-zA-Z]+(\.[-_0-9a-zA-Z]+){1,64})\^$/ && print "$1\n"' | perl -ne 'print if not /^[0-9]{1,3}(\.[0-9]{1,3}){3}$/' > temp-reject.txt
      #    curl -sSL $PETERLOWE_REJECT_URL | perl -ne '/^127\.0\.0\.1\s([-_0-9a-zA-Z]+(\.[-_0-9a-zA-Z]+){1,64})$/ && print "$1\n"' >> temp-reject.txt
      #    sed -i '/t.co/d' temp-reject.txt
      #    cat temp-reject.txt | sort --ignore-case -u > ./community/data/category-ads-all

      - name: Build Russia lists
        run: |
          echo "include:antifilter-download-community" > ./community/data/ru-blocked
          echo "include:refilter" >> ./community/data/ru-blocked

      - name: Build geosite.dat file
        run: |
          cd custom || exit 1
          go run ./ -outputpath=../ -exportlists= -datapath=../community/data -togfwlist=
          cd ../ && rm -rf custom

      - name: Generate geosite.dat sha256 hash
        run: |
          sha256sum geosite.dat > geosite.dat.sha256sum

      - name: Git push assets to "release" branch
        run: |
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote remove origin || true
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          if git ls-remote --exit-code origin release; then
            git push --delete origin release
          fi
          git checkout --orphan release

          git add geosite.dat.sha256sum geosite.dat
          git commit -m "${{ env.RELEASE_NAME }}"

          git push -f -u origin release

      - name: Release and upload assets
        run: |
          gh release upload ${{ env.TAG_NAME }} ./geosite.dat ./geosite.dat.sha256sum --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
